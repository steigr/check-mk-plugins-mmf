factory_settings["asterisk_peers_default_params"] = {
    "crit_if_offline_peers" : False,
}

def format_sip_trunk_name(line):
	return "SIP trunk %s@%s"%(line[4],line[2])

def inventory_asterisk_stats_sip_peers(checkname, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "peers" ):
			yield "SIP peers", {}

def inventory_asterisk_stats_sip_users(checkname, info):
	inventory = []
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "users" ):
			inventory.append ( ( "SIP users", "", None) )
	return inventory

def inventory_asterisk_stats_sip_trunks(checkname, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "registry" ):
			yield format_sip_trunk_name(line), {}

def inventory_asterisk_stats_sip_channels(checkname, info):
	inventory = []
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "channels" ):
			inventory.append ( ( "SIP active dialogs", "", None) )
	return inventory

def inventory_asterisk_stats_sip_channelstats(checkname, info):
	inventory = []
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "channelstats" ):
			inventory.append ( ( "SIP active channels", "", None) )
	return inventory

def inventory_asterisk_stats_sip_calls(checkname, info):
        inventory = []
        for line in info:
                if ( line[0], line[1] ) == ( "sip", "calls" ):
                        inventory.append ( ( "SIP calls", "", None) )
        return inventory

# Output:
# <<<asterisk_stats>>>
# sip peers 3 sip peers monitored 1 online, 2 offline unmonitored 0 online, 0 offline
# sip users 3
# sip registry sipgate.de:5060 Y 1562140 105 Registered Thu, 21 Jan 2010 11:43:55
# sip channels 1 active SIP dialog
# sip channelstats 0 active SIP channels
# sip calls 3

def check_asterisk_stats_sip_peers(item, params, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "peers" ):
			overall_peers		= int(line[2])
			online_monitored	= int(line[6])
			offline_monitored	= int(line[8])
			online_unmonitored	= int(line[11])
			offline_unmonitored	= int(line[13])
			if offline_monitored > 0 and params["crit_if_offline_peers"]:
				return (2,"CRITICAL - %i peer(s) are offline" % (offline_monitored))
			if online_unmonitored + offline_unmonitored == 0:
				return (0,"OK - %i all, %i online, %i offline" % ( overall_peers, online_monitored, offline_monitored ), [("online_monitored", online_monitored), ("offline_monitored", offline_monitored)])
			else:
				return (1,"WARNING - %i peers unmonitored"%(online_unmonitored + offline_unmonitored))

def check_asterisk_stats_sip_users(item, params, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "users" ):
			overall_users		= int(line[2])
			if overall_users > 0:
				return (0,"OK - %i users" % ( overall_users ), [('sip_users', overall_users)] )
			else:
				return (1,"WARNING - %i users" % ( overall_users ), [('sip_users', overall_users)] )

def check_asterisk_stats_sip_trunks(item, params, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "registry" ):
			trunk_name			= format_sip_trunk_name(line)
			trunk_status		= line[6]
			if trunk_name == item:
				if trunk_status == "Registered":
					return 0, "Registered"
				else:
					return 2, "%s" % ' '.join(line[6:])

def check_asterisk_stats_sip_channels(item, params, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "channels" ):
			active_dialogs		= int(line[2])
			return (0,"OK - %i active SIP dialogs" % ( active_dialogs ), [('active_dialogs', active_dialogs)] )

def check_asterisk_stats_sip_channelstats(item, params, info):
	for line in info:
		if ( line[0], line[1] ) == ( "sip", "channelstats" ):
			active_channels		= int(line[2])
			return (0,"OK - %i active SIP channels" % ( active_channels ), [('active_channels', active_channels)] )

def check_asterisk_stats_sip_calls(item, params, info):
        for line in info:
                if ( line[0], line[1] ) == ( "sip", "calls" ):
                        overall_calls		= int(line[2])
                        return (0,"OK - %i simultaneous calls" % ( overall_calls ), [("active_calls", overall_calls)] )

check_info['asterisk_stats.sip_peers']		= {
	"check_function"          : check_asterisk_stats_sip_peers,
    "inventory_function"      : inventory_asterisk_stats_sip_peers,
    "service_description"     : "Asterisk %s",
    "has_perfdata"            : True,
    "default_levels_variable" : "asterisk_peers_default_params",
    "group"                   : "asterisk_sip_peers",
}
check_info['asterisk_stats.sip_users']		= (check_asterisk_stats_sip_users, 	  "Asterisk" , 1 , inventory_asterisk_stats_sip_users)
check_info['asterisk_stats.sip_channels']	= (check_asterisk_stats_sip_channels, 	  "Asterisk" , 1 , inventory_asterisk_stats_sip_channels)
check_info['asterisk_stats.sip_channelstats']	= (check_asterisk_stats_sip_channelstats, "Asterisk" , 1 , inventory_asterisk_stats_sip_channelstats)
check_info['asterisk_stats.sip_calls']		= (check_asterisk_stats_sip_calls, 	  "Asterisk" , 1 , inventory_asterisk_stats_sip_calls)
check_info['asterisk_stats.sip_trunk']		= {
	"check_function"          : check_asterisk_stats_sip_trunks,
    "inventory_function"      : inventory_asterisk_stats_sip_trunks,
    "service_description"     : "Asterisk %s",
    "has_perfdata"            : False,
}